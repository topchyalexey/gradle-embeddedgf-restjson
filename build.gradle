// gradle clean glassfishEmbeddedTest -Dtest.debug=true

buildscript {
	repositories {
		maven { url 'http://central.maven.org/maven2' }
	    mavenCentral()
	    mavenLocal()
	    maven { url 'http://repository.jboss.org/nexus/content/groups/public' }
	    maven { url 'http://repository.jboss.org/nexus/content/repositories/deprecated' }
	}
  	dependencies {
		classpath fileTree( dir: 'libs', include: '*.jar')
		//classpath fileTree( dir: 'c:/home/topchy/repo/glassfish-embedded-master/build/libs', include: '*.jar') 
		classpath "org.glassfish.main.extras:glassfish-embedded-all:4.1.1"     
	}
}

apply plugin: 'tehlulz-glassfish-embedded'
apply plugin: 'maven'
apply plugin: 'war'
apply plugin: 'idea'


version = '1.0-SNAPSHOT'

ext.libraryVersions = [
    arquillian: '1.1.3.Final',
    arquillian_glassfish: '1.0.0.CR4',
    bootstrap: '3.0.0',
    glassfish: '4.1.1',
    gson: '2.2.4',
    hamcrest: '1.2',
    javaee: '7.0',
    jquery: '1.10.2',
    junit: '4.11',
    postgresql: '9.2-1003-jdbc4',
    shrinkwrapDesc: '2.0.0-alpha-3'
]

repositories {
	maven { url 'http://central.maven.org/maven2' }
    mavenCentral()
    mavenLocal()
    maven { url 'http://repository.jboss.org/nexus/content/groups/public' }
    maven { url 'http://repository.jboss.org/nexus/content/repositories/deprecated' }
}

configurations {
    provided
    glassfishEmbeddedTestRuntime { extendsFrom testRuntime }
}

dependencies {
    compile "javax:javaee-api:$libraryVersions.javaee"
    compile "org.webjars:bootstrap:$libraryVersions.bootstrap"
    compile "org.webjars:jquery:$libraryVersions.jquery"
    compile "org.webjars:jquery-ui:$libraryVersions.jquery"
    compile "com.google.code.gson:gson:$libraryVersions.gson"
    
    compile "org.hsqldb:hsqldb:2.2.8"

    testCompile "junit:junit:$libraryVersions.junit"
    testCompile "org.hamcrest:hamcrest-core:$libraryVersions.hamcrest"

    testCompile "org.jboss.arquillian.junit:arquillian-junit-container:$libraryVersions.arquillian"
    testCompile "org.jboss.shrinkwrap.descriptors:shrinkwrap-descriptors-api-javaee:$libraryVersions.shrinkwrapDesc"
    testCompile "org.glassfish.jersey.core:jersey-client:2.2"
    testCompile "org.jboss.arquillian:arquillian-bom:1.1.11.Final"

    testRuntime "org.jboss.shrinkwrap.descriptors:shrinkwrap-descriptors-impl-javaee:$libraryVersions.shrinkwrapDesc"
    testRuntime "org.codehaus.jackson:jackson-mapper-asl:1.9.13"

    glassfishEmbeddedTestRuntime "org.jboss.arquillian.container:arquillian-glassfish-embedded-3.1:$libraryVersions.arquillian_glassfish"
    glassfishEmbeddedTestRuntime "org.glassfish.main.extras:glassfish-embedded-all:$libraryVersions.glassfish"
}

test {
    useJUnit {
        excludeCategories 'com.steeplesoft.frenchpress.test.IntegrationTests'
    }
    testLogging.showStandardStreams = true
}

task glassfishEmbeddedTest(type: Test) { systemProperty 'arquillian.launch', "glassfish-embedded" }

tasks.withType(Test).matching({ t-> t.name.endsWith('Test') } as Spec).each { t ->
    if (System.getProperty('test.debug', 'false') == 'true') {
        t.jvmArgs '-Xdebug',
                '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005'
    }
    if (System.getProperty('test.single', '') != '') {
        t.includes = [System.getProperty('test.single')]
    }
    t.testLogging.showStandardStreams = true
    t.testClassesDir = project.sourceSets.test.output.classesDir
    t.classpath = project.configurations.getByName(t.name + 'Runtime') +
    project.sourceSets.main.output +
    project.sourceSets.test.output
    if (t.name.startsWith('jbossas')) {
        t.classpath += files('src/test/resources-jbossas')
    }
}

war.doLast {
    ant.unzip(src: war.archivePath, dest: "$buildDir/exploded")
}